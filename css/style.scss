// Variables
$primary-color: #2196f3;
$primary-color-dark: #1976d2;
$background-color: #f0f0f0;
$control-bg: rgba(255, 255, 255, 0.9);
$text-color: #333;
$border-radius: 8px;
$toggle-size: 44px;
$toggle-height: 24px;
$thumb-size: 20px;

// Theme colors
:root {
    --bg-color: #{$background-color};
    --control-bg: #{$control-bg};
    --text-color: #{$text-color};
    --slider-bg: #ddd;
}

[data-theme="dark"] {
    --bg-color: #1a1a1a;
    --control-bg: rgba(40, 40, 40, 0.9);
    --text-color: #fff;
    --slider-bg: #444;

    .file-input-container label {
        background: $primary-color;

        &:hover {
            background: $primary-color-dark;
        }
    }
}

// Base styles
body {
    font-family: Arial, sans-serif;
    background-color: var(--bg-color);
    margin: 0;
    padding: 0;
    transition: background-color 0.3s;
}

.top-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 20px;
 
    .file-input-container {
        flex: 1;
    }
}

// Controls
.controls {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 12px 25px;
    padding-left: 12px;
    background: var(--control-bg);
    border-radius: $border-radius;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    display: flex;
    gap: 10px;
    align-items: center;
    align-content: center;
    justify-content: center;
    backdrop-filter: blur(8px);
    flex-wrap: wrap;
    max-width: calc(100% - 40px);

    &.hidden {
        display: none;
    }

    @media (max-width: 768px) {
        flex-direction: column;
        align-items: center;
        padding: 20px;
        gap: 10px;
        min-width: 280px;
        width: 80%;
        max-width: 400px;

        > * {
            width: 100%;
        }

        .top-container {
            width: 100%;
        }

        .file-input-container label {
            justify-content: center;
            width: 100%;

            padding: 8px 0;
        }

        .slider-container,
        .toggle-container {
            justify-content: space-between;
            width: 100%;
            padding: 0 8px;
        }
    }
}

// Logo
.bane-logo {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 20px;
    font-weight: 500;
    color: var(--text-color);
    cursor: pointer;

    img {
        width: 32px;
        height: 32px;
    }
}

// Containers
.slider-container,
.toggle-container {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 8px;

    label {
        font-size: 14px;
        color: var(--text-color);
        font-weight: 500;
    }

    @media (max-width: 768px) {
        padding: 8px 0;
    }
}

// Colour Container

.colour-container-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;

    gap: 50px;

    h3 {
        font-size: 16px;
        color: var(--text-color);
        margin: 0;
        width: 100%;
        font-weight: 600;

        text-align: center;
    }
}
.colour-container {
    display: flex;
    flex-direction: row;
    gap: 10px;
    align-items: center;
    justify-content: center;
    margin: 10px 0;

    h3 {
        font-size: 16px;
        color: var(--text-color);
        margin: 0;
        width: 100%;
        font-weight: 600;
    }

    .colour-option {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 8px;

        label {
            font-size: 14px;
            color: var(--text-color);
            font-weight: 500;
        }

        input[type="color"] {
            width: 36px;
            height: 36px;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: transform 0.2s;

            &:hover {
                transform: scale(1.1);
            }
        }

        // Style the -webkit-color-swatch inside the input[type="color"]
        input[type="color"]::-webkit-color-swatch {
            border: none;
            border-radius: 50%;
        }

        input:disabled {
            cursor: not-allowed;
            opacity: 0.5;
        }
    }

    // // when small enough, stack the colour options
    // @media (max-width: 768px) {
    //     flex-direction: column;
    //     gap: 20px;
    // }
}

// Preview Container
#previewContainer {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    margin: 0;
    max-width: none;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    box-sizing: border-box;

    border-radius: 10px;
    overflow: hidden;

    .image-wrapper {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        position: relative;

        height: 100%;

        img {
            max-width: 100%;
            max-height: 100%;
            transition: transform 0.3s;
        }

        &.original {
            border-radius: 10px 0 0 10px;
        }
        &.recoloured {
            border-radius: 0 10px 10px 0;
        }
    }

    .image-wrapper.original img {
        transform: scale(var(--image-scale, 1));
    }

    .image-wrapper.recoloured img {
        transform: scale(var(--image-scale, 1));
    }

    &.pixelated .image-wrapper img {
        image-rendering: pixelated;
        image-rendering: -moz-crisp-edges;
        image-rendering: crisp-edges;
    }
}

// File Input
input[type="file"] {
    cursor: pointer;
    color: var(--text-color);
}

.file-input-container {
    position: relative;

    input[type="file"] {
        position: absolute;
        left: -9999px;
        opacity: 0;

        &:focus + label {
            box-shadow: 0 0 0 2px $primary-color;
        }
    }

    &.drag-over label {
        background: $primary-color-dark;
        transform: scale(1.02);
        box-shadow: 0 0 0 2px $primary-color;
    }

    label {
        display: flex;
        align-items: center;
        gap: 8px;
        padding: 8px 16px;
        background: $primary-color;
        color: white;
        border-radius: $border-radius;
        cursor: pointer;
        transition: all 0.2s;
        font-size: 14px;
        font-weight: 500;
        transform: scale(1);

        &:hover {
            background: $primary-color-dark;
            transform: scale(1.02);
        }

        svg {
            width: 20px;
            height: 20px;
        }

        @media (max-width: 768px) {
            width: 100%;
            justify-content: center;
        }
    }

    @media (max-width: 768px) {
        // width: 100%;
    }
}

// Range Inputs
.slider-container-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 20px;
}

.slider-container {
    display: flex;
    justify-content: space-between;
    gap: 8px;

    input[type="range"] {
        -webkit-appearance: none;
        width: 150px;
        height: 4px;
        background: var(--slider-bg);
        border-radius: 2px;
        outline: none;

        &::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 16px;
            height: 16px;
            background: $primary-color;
            border-radius: 50%;
            cursor: pointer;
            transition: background 0.2s;

            &:hover {
                background: $primary-color-dark;
            }
        }

        @media (max-width: 768px) {
            width: 60%;
            margin-left: 0;
        }
    }
}
// Toggle Switch
.toggles {
    display: flex;
    align-items: center;
    justify-content: space-between;

    flex-wrap: wrap;

    gap: 10px;
}

.toggle {
    input[type="checkbox"] {
        display: none;
    }

    label {
        position: relative;
        display: inline-block;
        width: $toggle-size;
        height: $toggle-height;
        margin-left: 8px;

        &::after {
            content: "";
            position: absolute;
            width: $thumb-size;
            height: $thumb-size;
            border-radius: 50%;
            background: white;
            top: 2px;
            left: 2px;
            transition: all 0.3s;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
        }

        &::before {
            content: "";
            position: absolute;
            width: $toggle-size;
            height: $toggle-height;
            background: #ddd;
            border-radius: calc($toggle-height / 2);
            transition: all 0.3s;
        }
    }

    input[type="checkbox"]:checked + label {
        &::before {
            background: $primary-color;
        }
        &::after {
            left: calc($toggle-size - $thumb-size - 2px);
        }
    }
}

.hidebar {
    color: var(--text-color);
    fill: var(--text-color);

    position: absolute !important;
    bottom: 0;
    right: 0;

    opacity: 0.5;

    width: 24px;

    cursor: pointer;

    &:hover {
        opacity: 1;
    }
}

// Tooltip
[data-tooltip] {
    position: relative;

    &::before {
        content: attr(data-tooltip);
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        background: var(--control-bg);
        color: var(--text-color);
        padding: 8px;
        border-radius: $border-radius;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        transition: opacity 0.2s, visibility 0.2s;
        z-index: 1000;
        backdrop-filter: blur(8px);

        white-space-collapse: preserve-breaks;
        text-align: center;

        // font-size: 20px;
        font-weight: 400;
    }

    &:hover::before {
        opacity: 1;
        visibility: visible;
    }
}

// Context Menu
.context-menu {
    position: fixed;
    display: none;
    background: var(--control-bg);
    border-radius: $border-radius;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    padding: 8px 0;
    z-index: 1100;
    backdrop-filter: blur(8px);

    .menu-item {
        padding: 8px 16px;
        font-size: 14px;
        color: var(--text-color);
        cursor: pointer;
        transition: background-color 0.2s;

        &:hover {
            background: rgba($primary-color, 0.1);
        }
    }
}



// fold the controls when it has the .folded class
.controls {
    transition: all 0.3s;

    #hidebar {
        transition: right 0.3s;
    }

    &.folded {
        transform: translateY(-100%) translateX(-50%);
    
        > *:not(#hidebar) {
            opacity: 0;
            pointer-events: none;
        }

        #hidebar {
            right: 50%;
            transform: translateX(50%) rotate(180deg);

            // rotate the tooltip
            &[data-tooltip]::before {
                transform: translateX(-50%) rotate(180deg);
            }
        }
    }
}